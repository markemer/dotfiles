## ZSH Stuff
# Path to your oh-my-zsh configuration.
ZSH={{ .chezmoi.homeDir }}/.oh-my-zsh

# Set name of the theme to load.
ZSH_THEME="robbyrussell"

# Tell ZSH where to look for custom plugins
ZSH_CUSTOM={{ .chezmoi.homeDir }}/{{ .libpath }}/zsh-custom

# Tell Oh-My-ZSH not to check, chezmoi will update
DISABLE_AUTO_UPDATE="true"

## Variables
# Port Installed Java Names: openjdk17-temurin
export JAVA_NAME=openjdk17-temurin
export JAVA_HOME="/Library/Java/JavaVirtualMachines/${JAVA_NAME}/Contents/Home"

# export FLUTTER_PATH={{ .optpath }}/flutter/bin

export SSH_PUBLIC={{ .chezmoi.homeDir }}/.ssh/id_rsa.pub
export SSH_AUTH_SOCK={{ .chezmoi.homeDir }}/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh

export GOPATH="/opt/go"

export GOBIN_PATH="/opt/go/bin"
export LOCALPATH_FILE={{ .chezmoi.homeDir }}/{{ .etcpath }}/localpath
export LOCAL_PATHS=$(cat $LOCALPATH_FILE | xargs | tr " " :)
export ETC_PATH=$(cat /etc/paths | xargs | tr " " :)

export PATH="$LOCAL_PATHS:$GOBIN_PATH:$ETC_PATH:$FLUTTER_PATH"

export EDITOR='code --wait'

# Autoload all of our local functions
fpath=({{ .chezmoi.homeDir }}/{{ .libpath }}/zsh-custom $fpath)
autoload -- {{ .chezmoi.homeDir }}/{{ .libpath }}/zsh-custom/[^_]*(:t)

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git emer)

source $ZSH/oh-my-zsh.sh

# OPAM configuration
. {{ .chezmoi.homeDir }}/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# PerlBrew configuration
export PERLBREW_ROOT={{ .chezmoi.homeDir }}/.perl5
source ~/.perl5/etc/bashrc
perlbrew use 5.34.0

# PYENV configuration
export PATH="{{ .chezmoi.homeDir }}/.pyenv/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# swiftenv configuration
# export SWIFTENV_ROOT="{{ .chezmoi.homeDir }}/.swiftenv"
# export PATH="$SWIFTENV_ROOT/bin:$PATH"
# eval "$(swiftenv init -)"

# SDKMan for Groovy, Java, etc
[[ -s "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh" ]] && source "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh"

# RVM configuration
# Add RVM to PATH for scripting
export PATH="$PATH:{{ .chezmoi.homeDir }}/.rvm/bin"
# Load RVM into a shell session *as a function*
[[ -s "{{ .chezmoi.homeDir }}/.rvm/scripts/rvm" ]] && source "{{ .chezmoi.homeDir }}/.rvm/scripts/rvm"

# N configuration
export N_PREFIX="{{ .chezmoi.homeDir }}/.n";
export PATH="$N_PREFIX/bin:$PATH"

# GHC-UP configuration
[ -f "${GHCUP_INSTALL_BASE_PREFIX:={{ .chezmoi.homeDir }}}/.ghcup/env" ] && source "${GHCUP_INSTALL_BASE_PREFIX:={{ .chezmoi.homeDir }}}/.ghcup/env"

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/opt/gcloud/path.zsh.inc' ]; then . '/opt/gcloud/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
# if [ -f '/opt/gcloud/completion.zsh.inc' ]; then . '/opt/gcloud/completion.zsh.inc'; fi

# aws-cli completions
# autoload bashcompinit && bashcompinit
# complete -C '/usr/local/bin/aws_completer' aws

# iTerm2 Shell Integration for ZSH
if [ -e "{{ .chezmoi.homeDir }}/.iterm2_shell_integration.zsh" ]; then . "{{ .chezmoi.homeDir }}/.iterm2_shell_integration.zsh"; fi

# Powerline Shell
function powerline_precmd() {
    PS1="$(powerline-shell --shell zsh $?)"
}

function install_powerline_precmd() {
   for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

# aliases
{{ template "darwin-aliases" . }}

# nostromo [section begin]
# eval "$(nostromo completion)"
# nostromo [section end]
